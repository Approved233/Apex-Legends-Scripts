global function Lobby_AddLocalPlayer
global function AddCallback_OnPlayerAddedToLobby
global function Lobby_SetBannerSkin
#if DEV
global function DEV_SetLobbyBannerSkin
#endif

global function Lobby_OnReadyFX


const int LOBBY_BANNER_DEFAULT_SKIN_INDEX = 0
const int LOBBY_BANNER_MIXTAPE_SKIN_INDEX = 1
const int LOBBY_BANNER_LTM_SKIN_INDEX = 2

const int LOBBY_EVENT1_SKIN_OFFSET = 3
const int LOBBY_EVENT2_SKIN_OFFSET = 6

struct
{
	array<void functionref( entity )> onPlayerAddedToLobbyCallbacks

	array<entity> lobbyBanners
	array<entity> lobbyBases
#if DEV
		bool overrideLobbyBanner = false
#endif
	bool revCreated = false

} file

void function Lobby_AddLocalPlayer()
{
	entity player = GetLocalClientPlayer()
	Assert( IsValid( player ) )

	player.FreezeControlsOnClient()
	player.HideCrosshairNames()

	SetStandardAbilityBindingsForPilot( player )
	RefreshPresentationType()


	
	
	
	RunUIScript( "Lobby_EnableMinimapCoordsOnConnect", player.GetPlayerName() )


	foreach ( func in file.onPlayerAddedToLobbyCallbacks )
		func( player )

	CacheLobbyBannerEnt()
	SetupEventProps()
	SetupEventBase()


	SetupRevAnimation()


	RunUIScript( "MaybeSendPINSettingsEvent" )
}

void function AddCallback_OnPlayerAddedToLobby( void functionref( entity ) onPlayerAddedToLobbyCallback )
{
	Assert( ! ( file.onPlayerAddedToLobbyCallbacks.contains( onPlayerAddedToLobbyCallback ) ), "Attempted to add same callback to onPlayerAddedToLobbyCallbacks twice." )

	file.onPlayerAddedToLobbyCallbacks.append( onPlayerAddedToLobbyCallback )
}

void function CacheLobbyBannerEnt()
{
	file.lobbyBanners = GetEntArrayByScriptName( "lobby_banner" )
	file.lobbyBases = GetEntArrayByScriptName( "lobby_base" )
	PrecacheParticleSystem( $"P_s14_HW_eye" )
	PrecacheParticleSystem( $"P_s18_HW_bat_Swarm" )
	PrecacheParticleSystem( $"P_s18_HW_eye_NC" )
}

void function Lobby_OnReadyFX( bool isReady )
{
	if ( IsLobbyEvent1Active() )
	{
		if ( isReady )
		{
			foreach ( lobbyBase in file.lobbyBases )
			{
				if ( IsValid( lobbyBase ) )
				{
					lobbyBase.SetSkin( 3 )
				}
			}
		}
		else
		{
			foreach ( lobbyBase in file.lobbyBases )
			{
				if ( IsValid( lobbyBase ) )
				{
					lobbyBase.SetSkin( 1 )
				}
			}
		}
	}
}

void function Lobby_SetBannerSkin( string playlist )
{
	if( file.lobbyBanners.len() == 0 )
	{
		
		CacheLobbyBannerEnt()

		if( file.lobbyBanners.len() == 0 )
		{
			Warning( "Lobby_SetBannerSkin - No lobby_banner entity found!" )
			return
		}
	}

	string playlistName = GetParty().playlistName
	int skinIndex =  LOBBY_BANNER_DEFAULT_SKIN_INDEX

	if ( GetPlaylistVarBool( playlistName, "is_limited_mode", false ) )
		skinIndex =  LOBBY_BANNER_LTM_SKIN_INDEX
	else if ( GetPlaylistVarString( playlistName, "ui_slot", "" ) == "mixtape" )
		skinIndex =  LOBBY_BANNER_MIXTAPE_SKIN_INDEX

#if DEV
		if ( file.overrideLobbyBanner )
			return
#endif

	if ( IsLobbyEvent1Active() )
	{
		skinIndex = skinIndex + LOBBY_EVENT1_SKIN_OFFSET
	}

	if ( IsLobbyEvent2Active() )
	{
		skinIndex = skinIndex + LOBBY_EVENT2_SKIN_OFFSET
	}

	Lobby_SetBannerSkinInternal ( skinIndex )
}

void function Lobby_SetBannerSkinInternal( int skinIndex )
{
	foreach ( lobbyBanner in file.lobbyBanners )
	{
		if ( IsValid(lobbyBanner) )
			lobbyBanner.SetSkin( skinIndex )
	}
}

#if DEV
void function DEV_SetLobbyBannerSkin( int i )
{
	if ( i == -1 )
	{
		file.overrideLobbyBanner = false
		return
	}

	Lobby_SetBannerSkinInternal( i )
	file.overrideLobbyBanner = true
}
#endif

void function SetupEventBase()
{
	int skinId = 0

	if ( IsLobbyEvent1Active() )
		skinId = 1

	if ( IsLobbyEvent2Active() )
		skinId = 2

	if ( skinId == 0 )
		return

	foreach ( lobbyBase in file.lobbyBases )
	{
		if ( IsValid( lobbyBase ) )
		{
			lobbyBase.SetSkin(skinId )
		}
	}
}

void function SetupEventProps()
{
	SetupEvent1Props()
	SetupEvent2Props()
}

void function SetupEvent1Props()
{
	if ( !IsLobbyEvent1Active() )
	{
		array<entity> event_props = GetEntArrayByScriptName( "event_1_prop" )
		foreach ( event_prop in event_props )
		{
			if ( IsValid( event_prop ) )
				event_prop.Destroy()
		}

		return
	}
}

void function SetupEvent2Props()
{
	if ( !IsLobbyEvent2Active() )
	{
		array<entity> event_props = GetEntArrayByScriptName( "event_2_prop" )
		foreach ( event_prop in event_props )
		{
			if ( IsValid( event_prop ) )
				event_prop.Destroy()
		}

		return
	}

	
	array<entity> effects = GetEntArrayByScriptName( "event_2_effect" )
	foreach ( effect in effects )
	{
		if ( IsValid( effect ) )
			StartParticleEffectOnEntity( effect, GetParticleSystemIndex( $"P_s18_HW_bat_Swarm" ), FX_PATTACH_ABSORIGIN, ATTACHMENTID_INVALID )
	}

	if ( file.revCreated )
		return

	entity rev1 = CreateClientSidePropDynamic(<-40, 740, 0> , <0, -90, 0>, $"mdl/humans/class/heavy/pilot_heavy_revenant_reborn.rmdl")
	rev1.SetScriptName( "rev1" )

	int skinIdx = rev1.GetSkinIndexByName( "ShadowSqaud" )
	if ( skinIdx > 0 )
	{
		rev1.SetSkin( skinIdx )
		rev1.SetCamo( 0 )
	}
	else 
	{
		rev1.kv.rendercolor = <0, 0, 0>
	}

	StartParticleEffectOnEntity( rev1, GetParticleSystemIndex( $"P_s14_HW_eye" ), FX_PATTACH_POINT_FOLLOW, rev1.LookupAttachment( "EYE_L" ) )
	StartParticleEffectOnEntity( rev1, GetParticleSystemIndex( $"P_s14_HW_eye" ), FX_PATTACH_POINT_FOLLOW, rev1.LookupAttachment( "EYE_R" ) )

	rev1.Anim_Play("S18_Lobby_revenant_shadow_pit")

	file.revCreated = true
}


void function SetupRevAnimation()
{
	array<entity> revs = GetEntArrayByScriptName( "s18_lobby_talking_rev" )
	if ( revs.len() != 1 )
		return

	revs[0].SetModelScale(1.1)
	revs[0].Anim_Play("revenant_teaser_lobby_powerdown_loop")
}
      